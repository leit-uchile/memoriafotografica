# Generated by Django 2.0.5 on 2018-12-01 16:13

import Users.managers
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Gallery', '0001_initial'),
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(max_length=30, verbose_name='last name')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('deleted', models.BooleanField(default=False, verbose_name='deleted')),
                ('generation', models.CharField(blank=True, max_length=5, verbose_name='generation')),
                ('user_type', models.PositiveSmallIntegerField(choices=[(1, 'colaborator'), (2, 'curator'), (3, 'admin')], default=1)),
                ('rol_type', models.PositiveSmallIntegerField(choices=[(1, 'Alumno'), (2, 'Ex-Alumno'), (3, 'Académico'), (4, 'Ex-Académico'), (5, 'Funcionario'), (6, 'Externo')], default=6)),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('albums', models.ManyToManyField(blank=True, to='Gallery.Album')),
                ('comments', models.ManyToManyField(blank=True, to='Gallery.Comment')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('photos', models.ManyToManyField(blank=True, to='Gallery.Photo')),
                ('report', models.ManyToManyField(blank=True, to='Gallery.Reporte')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', Users.managers.UserManager()),
            ],
        ),
    ]
